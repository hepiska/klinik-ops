version: "3"
services:
  traefik:
    image: traefik:alpine
    ports:
      - 80:80
      - 443:443
    networks:
      - web
    expose:
      - "8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/traefik/traefik.toml:/traefik.toml
      - /opt/traefik/acme.json:/acme.json
    labels:
      - "traefik.port=8080"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:monit.stage.emedika.id"
      - "traefik.http.middlewares.test-auth.basicauth.users=$TRAEFIK_BASIC_AUTH"
  user:
    container_name: emedika-user
    env_file:
     - ./user.env
    restart: always
    image: ghcr.io/hepiska/emedika-user:latest
    networks: 
      - web
    ports:
      - "4000"
    environment:
      WAIT_HOSTS: mongo:27017
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:user.stage.emedika.id"
      - "traefik.port=4000"
      - "traefik.docker.network=web"
  apotek:
    container_name: emedika-apotek
    restart: always
    image: 
    networks: 
      - web
    ports:
      - "4040"
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:apotek.stage.emedika.id"
      - "traefik.docker.network=web"
  postgre:
    container_name: postgre
    image: postgres:alpine
    volumes:
      - ./datadir/postgre:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    environment:
      POSTGRES_PASSWORD: $PG_PASSWORD
      POSTGRES_USER: $PG_USERNAME
    network_mode: "host"
  mongo:
    image: mongo:3.6
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_USERNAME
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_PASSWORD
    ports:
      - "27017:27017"
    networks:
      - web
    volumes:
      - ./datadir/mongo:/var/lib/mongo
networks:
  web:
    external:
      name: web
